# Generated by Django 4.1.2 on 2022-10-27 13:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0003_alter_community_postedby'),
    ]

    operations = [
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=200)),
                ('accepted_count', models.IntegerField(default=0)),
                ('insights', models.CharField(blank=True, max_length=200, null=True)),
                ('point', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.TextField(blank=True, null=True)),
                ('text', models.CharField(blank=True, max_length=200, null=True)),
                ('likes_count', models.IntegerField(default=0)),
                ('comment_count', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.TextField(blank=True, null=True)),
                ('reward_points', models.IntegerField(default=0)),
                ('unlocked_badges', models.ManyToManyField(related_name='profiles', to='api.badges')),
            ],
        ),
        migrations.RemoveField(
            model_name='challenges',
            name='challengedby',
        ),
        migrations.RemoveField(
            model_name='challenges',
            name='completedby',
        ),
        migrations.RemoveField(
            model_name='challenges',
            name='joinedby',
        ),
        migrations.RemoveField(
            model_name='community',
            name='commentedby',
        ),
        migrations.RemoveField(
            model_name='community',
            name='likedby',
        ),
        migrations.RemoveField(
            model_name='community',
            name='postedby',
        ),
        migrations.RemoveField(
            model_name='user',
            name='reward_points',
        ),
        migrations.DeleteModel(
            name='ChallengeDetails',
        ),
        migrations.DeleteModel(
            name='Challenges',
        ),
        migrations.DeleteModel(
            name='Community',
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='post',
            name='likes_users',
            field=models.ManyToManyField(related_name='liked_posts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='post',
            name='posted_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='post',
            name='related_challenge',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='api.challenge'),
        ),
        migrations.AddField(
            model_name='comment',
            name='commented_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='related_post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='api.post'),
        ),
        migrations.AddField(
            model_name='challenge',
            name='accepted_users',
            field=models.ManyToManyField(related_name='accepted_challenges', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='challenge',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challenges', to=settings.AUTH_USER_MODEL),
        ),
    ]
